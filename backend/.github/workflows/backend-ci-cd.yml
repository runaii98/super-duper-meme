name: Backend CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'main_server/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'main_server/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: main_server/package-lock.json
          
      - name: Install dependencies
        run: |
          cd main_server
          npm ci
          
      - name: Run tests
        run: |
          cd main_server
          npm test || true
          
  docker-build-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Create credentials directory and dummy files
        run: |
          mkdir -p main_server/credentials
          echo '{"type":"placeholder"}' > main_server/credentials/gcp.json
          echo '{"accessKey":"placeholder","secretKey":"placeholder"}' > main_server/credentials/aws.json
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./main_server
          file: ./main_server/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/run-ai-backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/run-ai-backend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/run-ai-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/run-ai-backend:buildcache,mode=max

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/run-ai
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/run-ai-backend:latest
            docker-compose down
            docker-compose up -d
            docker image prune -f
